---
import {personalStuff} from "../../data/exportContent";
import BaseLayout from "../layouts/BaseLayout.astro";
import {EtypeContent} from "../../data/MyStuffTableMapping";
---

<BaseLayout>
    <my-stuff data-personalStuff={JSON.stringify(personalStuff)}>
        <aside>
            {
                Object.keys(EtypeContent)
                    .filter((key) => isNaN(Number(key)))
                    .map((e) => <a class="SuperCat">{e}</a>)
            }
        </aside>
        <aside>
            <div id="root"></div>
        </aside>
    </my-stuff>
</BaseLayout>

<style>
    .SuperCat {
        padding: 5px;
    }

    :hover .SuperCat {
        cursor: pointer;
    }
</style>

<script>
    import type {MyStuffType} from "../../data/exportContent";
    import {tableMaker} from "../utils/tableHelper";
    import {EtypeContent, exportTypes} from "../../data/MyStuffTableMapping";

    const setGenericItems = (
        enums: EtypeContent,
        cat: Array<any>,
        body: Element,
    ) =>
        setGenericTable(
            body,
            exportTypes[enums].displayName,
            exportTypes[enums].header,
            cat.map(exportTypes[enums].mappingFunction),
        );

    function setGenericTable(
        body: Element,
        nameSection: string,
        tableHeader: Array<string>,
        tableContent: (string | Element | undefined)[][],
    ) {
        let subBody: Element = document.createElement("div");
        let sample: Element;

        sample = document.createElement("div");
        sample.textContent = nameSection + ":";
        body.append(sample);

        subBody.append(tableMaker(tableHeader, tableContent));
        body.append(subBody);
    }

    class myStuff extends HTMLElement {
        myStuff!: MyStuffType;
        superLayoutId: EtypeContent = EtypeContent.Cosplay;
        body: Element = Element.prototype;

        setClickSelection(index: number) {
            if (!this.myStuff) {
                return;
            }

            this.body.innerHTML = "";
            this.superLayoutId = index;
            setGenericItems(
                this.superLayoutId,
                this.myStuff[this.superLayoutId],
                this.body,
            );
        }

        connectedCallback() {
            console.log("It's loading");
            const body = document.getElementById("root");

            if (!body) {
                console.log("No Body");
                return;
            }
            this.body = body;

            const buttons = document.querySelectorAll("a.SuperCat");
            const awesomeListString = this.dataset.personalstuff;
            if (!awesomeListString) {
                console.log("No Awesomelist");
                return;
            }

            this.myStuff = JSON.parse(awesomeListString) as MyStuffType;
            // Handle clicks on each button.
            buttons.forEach((button, index) => {
                button.addEventListener("click", () =>
                    this.setClickSelection(index),
                );
            });
        }
    }

    customElements.define("my-stuff", myStuff);
</script>
